version: "3.9"

services:
  frontend: # nome dado para identificar o serviço
      container_name: frontend
      build: ./front-end # caminho do dockerfile
      environment:
        - REACT_APP_HOSTNAME=localhost
        - REACT_APP_BACKEND_PORT=3001
      ports:
        - 3000:3000 # primeiro é a porta que você quer acessar no PC e depois a porta que o aplicativo está rodando
      command: npm start # comando a ser executado assim que a aplicação subir
      restart: on-failure
      depends_on: # Informa que depende de algum serviço para funcionar
        backend: # nome do serviço
          condition: service_started

  backend: # nome dado para identificar o serviço
    container_name: backend
    build: ./back-end # caminho do dockerfile
    environment:
      - PORT=3001
      - MYSQL_USER=root
      - MYSQL_PASSWORD=password
      - MYSQL_PORT=3306
      - HOSTNAME=mysql
    ports:
      - 3001:3001 # primeiro é a porta que você quer acessar no PC e depois a porta que o aplicativo está rodando
    command: npm run docker # comando a ser executado assim que a aplicação subir
    restart: on-failure
    depends_on: # Informa que depende de algum serviço para funcionar
      mysql: # nome do serviço
        condition: service_healthy

  mysql:
    container_name: mysql
    image: mysql:5.7.31 # Informa a imagem que eu quero ultilizar
    environment: # local onde fica as variveis de ambiente
      - MYSQL_ROOT_PASSWORD=password
      - TZ=America/Sao_Paulo
      - MYSQL_DATABASE=delivery-app
    ports: 
      - 3002:3306 # primeiro é a porta que você quer acessar no PC e depois a porta que o aplicativo está rodando
    command: --default-authentication-plugin=mysql_native_password --sql_mode=NO_ENGINE_SUBSTITUTION,NO_AUTO_CREATE_USER --explicit_defaults_for_timestamp
    restart: always # Caso tenha algum problema com o container ele vai reiniciar
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 30s
